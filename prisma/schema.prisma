datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialActions"]
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

//Modelo User
model User {
  id            String    @id @default(cuid())
  name          String?
  username      String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  password      String?
  image         String?
  role          String?
  accounts      Account[]
  sessions      Session[]
  reservations  Reserva[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

// Model Reserva
model Reserva {
  id            String   @id @default(cuid())
  user          User     @relation(fields: [userId], references: [id])
  userId        String
  vuelo         Vuelo    @relation(fields: [vueloId], references: [id])
  vueloId       String
  precioReserva Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  Compra        Compra[]
}

// Model Compra
model Compra {
  id           String   @id @default(cuid())
  nombreUser   String
  reserva      Reserva  @relation(fields: [reservaId], references: [id])
  reservaId    String
  precioCompra Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

//Model Tarjeta
model Tarjeta {
  Num_Tarjeta Int     @id
  Mes_Exp     Int
  Date_Exp    Int
  CVV         Int
  Monto       Decimal
  Tipo        String
}

//Model Vuelo
model Vuelo {
  id                  String    @id @default(cuid())
  codigoAerolinea     String
  origenCodigoPais    String?
  destinoCodigoPais   String?
  codigoPuertaSalida  Int
  codigoPuertaLlegada Int
  fechaSalida         DateTime  @default(now())
  fechaLlegada        DateTime  @default(now())
  estadoVuelo         String
  precioVuelo         Int
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  Reserva             Reserva[]
}

// Model Aerolinea
model Aerolinea {
  id        String   @id @default(cuid())
  nombre    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Model Pais
model Pais {
  id          String   @id @default(cuid())
  pais_Nombre String   @unique
  paisID      Int      @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// Model PuertaAeropuerto
model PuertaAeropuerto {
  id        String   @id @default(cuid())
  numero    Int
  detalle   String
  estado    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
